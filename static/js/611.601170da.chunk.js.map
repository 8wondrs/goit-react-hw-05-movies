{"version":3,"file":"static/js/611.601170da.chunk.js","mappings":"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","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 50px;\n  margin-bottom: 10px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 10px;\n  width: 10%;\n`;\nexport const Block = styled.div``;\n\nexport const Image = styled.img`\n  width: 150px;\n  border-radius: 10px;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  font-size: 12px;\n\n  width: auto;\n`;\n\nexport const CastName = styled.p`\n  font-size: 14px;\n  font-weight: 700;\n  width: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { TheMovieDbAPI } from '../../services/api.js';\nimport { useParams } from 'react-router-dom';\nimport {\n  Title,\n  CastList,\n  CastItem,\n  Block,\n  Image,\n  Text,\n  CastName,\n} from './Cast.styled.jsx';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader/Loader';\nconst theMovieDbAPI = new TheMovieDbAPI();\n\nexport function Cast() {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { data } = await theMovieDbAPI.getCastInfo(moviesId);\n\n        if (data.cast.length === 0) {\n          setError('Oooops! There is no cast info');\n        } else {\n          setCast(data.cast);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getCast();\n  }, [moviesId]);\n\n  return (\n    <Block>\n      <Title>Cast</Title>\n      <CastList>\n        {cast.slice(0, 10).map(cast => (\n          <CastItem key={cast.id}>\n            {cast.profile_path ? (\n              <Image\n                src={`${TheMovieDbAPI.IMG_URL + cast.profile_path}`}\n                alt={cast.name}\n              />\n            ) : (\n              <Loader />\n            )}\n            <CastName>{cast.name}</CastName>\n            <Text>Character: {cast.character}</Text>\n          </CastItem>\n        ))}\n      </CastList>\n      {error && <p>{error}</p>}\n    </Block>\n  );\n}\nCast.propTypes = {\n  moviesId: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  margin-left: 50px;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewsList = styled.ul`\n  margin-left: 50px;\n  margin-bottom: 10px;\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const Block = styled.div``;\nexport const Text = styled.p`\n  margin-left: 50px;\n  margin-top: 10px;\n  width: 90%;\n`;\n","import { useState, useEffect } from 'react';\nimport { TheMovieDbAPI } from '../../services/api.js';\nimport { useParams } from 'react-router-dom';\nimport {\n  Title,\n  Block,\n  Text,\n  ReviewsList,\n  ReviewsItem,\n} from './Reviews.styled.jsx';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\n\nexport function Reviews() {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { data } = await theMovieDbAPI.getReviews(moviesId);\n\n        if (data.results.length === 0) {\n          setError('Oooops! There is no reviews');\n        } else {\n          setReviews(data.results);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getReviews();\n  }, [moviesId]);\n\n  return (\n    <Block>\n      <Title>Reviews</Title>\n\n      <ReviewsList>\n        {reviews.map(review => (\n          <ReviewsItem key={review.id}>\n            <h4>Author: {review.author}</h4>\n            <Text>{review.content}</Text>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n\n      {error && <p>{error}</p>}\n    </Block>\n  );\n}\n\nReviews.propTypes = {\n  moviesId: PropTypes.number,\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Block = styled.div`\n  display: flex;\n  gap: 20px;\n  margin: 20px 40px;\n`;\n\nexport const Image = styled.img`\n  height: 400px;\n  border-radius: 10px;\n`;\n\nexport const InfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  width: 500px;\n`;\n\nexport const Title = styled.h3`\n  margin-left: 40px;\n`;\nexport const LinkStyled = styled(Link)`\n  margin-top: 30px;\n  margin-left: 40px;\n  display: inline-block;\n  background-color: #f39c1c;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  text-align: center;\n  text-decoration: none;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 0.25rem;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #818080;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);\n  }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 600;\n  transition: color 0.3s ease;\n  &:hover {\n    color: #f39c1c;\n  }\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-direction: column;\n  text-decoration: none;\n`;\n\nexport const AdditionalItem = styled.li``;\n","import { useState, useEffect } from 'react';\nimport { TheMovieDbAPI } from '../../services/api.js';\nimport { useParams, Routes, Route, useLocation } from 'react-router-dom';\nimport { Cast } from 'pages/Cast/Cast';\nimport { Reviews } from 'pages/Reviews/Reviews';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Block,\n  Image,\n  InfoBlock,\n  Title,\n  LinkStyled,\n  NavLinkStyled,\n  AdditionalList,\n  AdditionalItem,\n} from './MovieDetails.styled.jsx';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\n\nfunction MovieDetails() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const goBackLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const { data } = await theMovieDbAPI.getMovieInfoById(moviesId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMovies();\n  }, [moviesId]);\n\n  const { poster_path, title, vote_average, genres, overview } = movie;\n\n  return (\n    <>\n      <LinkStyled to={goBackLink}>Go back</LinkStyled>\n      {movie && (\n        <Block>\n          {poster_path ? (\n            <Image src={`${TheMovieDbAPI.IMG_URL + poster_path}`} alt={title} />\n          ) : (\n            <Loader />\n          )}\n          <InfoBlock>\n            <h1>{title}</h1>\n            <p>User score: {Math.round(vote_average * 10)} %</p>\n            <p>\n              <b>Overview: </b>\n              {overview}\n            </p>\n            {genres && (\n              <p>\n                <b>Genres: </b>\n                {genres.map(genre => genre.name).join(', ')}\n              </p>\n            )}\n          </InfoBlock>\n        </Block>\n      )}\n      {error && <p>Error{error}</p>}\n      <Title>Additional information</Title>\n      <AdditionalList>\n        <AdditionalItem>\n          <NavLinkStyled\n            to={`cast`}\n            state={{ from: location?.state?.from ?? '/' }}\n          >\n            Cast\n          </NavLinkStyled>\n        </AdditionalItem>\n        <AdditionalItem>\n          <NavLinkStyled\n            to={`reviews`}\n            state={{ from: location?.state?.from ?? '/' }}\n          >\n            Reviews\n          </NavLinkStyled>\n        </AdditionalItem>\n      </AdditionalList>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  moviesId: PropTypes.number,\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport class TheMovieDbAPI {\n  static API_KEY = '79209162ecc142c272c8ee9a86025795';\n  static BASE_URL = 'https://api.themoviedb.org/3';\n  static IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  constructor() {\n    this.page = 1;\n    this.query = null;\n    this.per_page = 20;\n  }\n\n  async getPopularFilms(pageNumber) {\n    this.page = pageNumber;\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/trending/movie/week`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          page: this.page,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchUniqFilms(query) {\n    const searchParams = {\n      params: {\n        language: 'en-US',\n        page: this.page,\n        query: this.query,\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    };\n\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/search/movie`,\n      searchParams\n    );\n\n    return response;\n  }\n\n  async getMovieInfoById(id) {\n    const response = await axios.get(`${TheMovieDbAPI.BASE_URL}/movie/${id}?`, {\n      params: {\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    });\n\n    return response;\n  }\n\n  async getCastInfo(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/credits?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async getReviews(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/reviews?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n          page: this.page,\n        },\n      }\n    );\n    return response;\n  }\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","Block","_templateObject4","Image","_templateObject5","Text","_templateObject6","CastName","_templateObject7","theMovieDbAPI","TheMovieDbAPI","Cast","moviesId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$theMovieDbAPI$","data","_context","prev","next","getCastInfo","sent","length","t0","message","stop","apply","arguments","_jsxs","children","_jsx","slice","map","profile_path","src","concat","alt","name","Loader","character","id","ReviewsList","ReviewsItem","Reviews","reviews","setReviews","getReviews","results","review","author","content","InfoBlock","LinkStyled","Link","NavLinkStyled","NavLink","AdditionalList","AdditionalItem","_templateObject8","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","movie","setMovie","location","useLocation","goBackLink","state","from","getMovies","getMovieInfoById","poster_path","title","vote_average","genres","overview","_Fragment","to","Math","round","genre","join","Routes","Route","path","element","_classCallCheck","this","page","query","per_page","_createClass","key","value","_getPopularFilms","pageNumber","response","axios","BASE_URL","params","api_key","API_KEY","abrupt","_x","_fetchUniqFilms","_callee2","searchParams","_context2","language","_x2","_getMovieInfoById","_callee3","_context3","_x3","_getCastInfo","_callee4","_context4","_x4","_getReviews","_callee5","_context5","_x5","IMG_URL"],"sourceRoot":""}