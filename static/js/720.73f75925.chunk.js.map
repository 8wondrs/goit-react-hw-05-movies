{"version":3,"file":"static/js/720.73f75925.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li``;\n\nexport const LinkStyled = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  height: 400px;\n  margin: 0 auto;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h3`\n  width: 260px;\n  text-align: center;\n  margin: 0 auto;\n`;\n","import { MovieItem, LinkStyled, Image, Title } from './MoviesList.styled.jsx';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TheMovieDbAPI } from '../../services/api.js';\nimport { Loader } from 'components/Loader/Loader';\n\nexport function MoviesList({ id, title, poster_path }) {\n  const location = useLocation();\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <Image src={`${TheMovieDbAPI.IMG_URL + poster_path}`} alt={title} />\n        ) : (\n          <Loader />\n        )}\n        <Title>{title}</Title>\n      </LinkStyled>\n    </MovieItem>\n  );\n}\n\nMoviesList.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100px;\n  margin: 20px 45px;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #ccc;\n  padding: 10px;\n  font-size: 16px;\n  flex: 1;\n  border-radius: 4px;\n  transition: border 0.3s ease;\n  &:hover {\n    border: 2px solid #f39c1c;\n  }\n  &:focus {\n    outline: none;\n    border: 2px solid #f39c1c;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #f39c1c;\n  border: none;\n  color: white;\n  padding: 12px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: #818080;\n  }\n`;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchForm.styled.jsx';\n\nfunction SearchForm({ onSubmit, defaultValue }) {\n  const searchRef = useRef();\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    onSubmit(searchRef.current.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <Input defaultValue={defaultValue} ref={searchRef} type=\"text\" required />\n      <Button>Search</Button>\n    </Form>\n  );\n}\n\nSearchForm.propTypes = {\n  defaultValue: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  padding: 0px;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { TheMovieDbAPI } from '../../services/api.js';\nimport { MovieList } from './Movies.styled.jsx';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n  theMovieDbAPI.query = searchQuery;\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    const getMovies = async () => {\n      try {\n        const { data } = await theMovieDbAPI.fetchUniqFilms();\n        if (data.results.length === 0) {\n          setError('Movie not found...');\n        } else {\n          setMovies(data.results);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMovies();\n  }, [searchQuery]);\n\n  const onSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <section>\n      <SearchForm defaultValue={searchQuery} onSubmit={onSubmit} />\n      <MovieList>\n        {movies.length !== 0 &&\n          movies.map(movie => {\n            return <MoviesList {...movie} key={movie.id} />;\n          })}\n      </MovieList>\n      {error && <p>{error}</p>}\n    </section>\n  );\n}\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport class TheMovieDbAPI {\n  static API_KEY = '79209162ecc142c272c8ee9a86025795';\n  static BASE_URL = 'https://api.themoviedb.org/3';\n  static IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  constructor() {\n    this.page = 1;\n    this.query = null;\n    this.per_page = 20;\n  }\n\n  async getPopularFilms(pageNumber) {\n    this.page = pageNumber;\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/trending/movie/week`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          page: this.page,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchUniqFilms(query) {\n    const searchParams = {\n      params: {\n        language: 'en-US',\n        page: this.page,\n        query: this.query,\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    };\n\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/search/movie`,\n      searchParams\n    );\n\n    return response;\n  }\n\n  async getMovieInfoById(id) {\n    const response = await axios.get(`${TheMovieDbAPI.BASE_URL}/movie/${id}?`, {\n      params: {\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    });\n\n    return response;\n  }\n\n  async getCastInfo(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/credits?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async getReviews(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/reviews?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n          page: this.page,\n        },\n      }\n    );\n    return response;\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["MovieItem","styled","LinkStyled","Link","Image","Title","MoviesList","id","title","poster_path","location","useLocation","to","state","from","src","TheMovieDbAPI","alt","Loader","Form","Input","Button","onSubmit","defaultValue","searchRef","useRef","event","preventDefault","current","value","ref","type","required","MovieList","theMovieDbAPI","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","useEffect","getMovies","fetchUniqFilms","data","results","length","message","searchValue","map","movie","key","this","page","per_page","pageNumber","axios","BASE_URL","params","api_key","API_KEY","response","language","IMG_URL","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}